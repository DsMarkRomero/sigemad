<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TerritorioObligatorio" xml:space="preserve">
    <value>Neutral</value>
  </data>
  <data name="TerritorioInvalido" xml:space="preserve">
    <value>Neutral</value>
  </data>
  <data name="DenominacionNoVacio" xml:space="preserve">
    <value>Neutral</value>
  </data>
  <data name="DenominacionObligatorio" xml:space="preserve">
    <value>Denominacion es obligatorio</value>
  </data>
  <data name="DenominacionMaxLength" xml:space="preserve">
    <value>Denominacion no puede exceder los 255 caracteres</value>
  </data>
  <data name="FechaInicioObligatorio" xml:space="preserve">
    <value>Fecha de Inicio es obligatoria</value>
  </data>
  <data name="ClaseSucesoObligatorio" xml:space="preserve">
    <value>Clase de Suceso es obligatorio</value>
  </data>
  <data name="EstadoSucesoObligatorio" xml:space="preserve">
    <value>Estado de Suceso es obligatorio</value>
  </data>
  <data name="GeoPosicionObligatorio" xml:space="preserve">
    <value>GeoPosicion es obligatorio</value>
  </data>
  <data name="GeoPosicionInvalida" xml:space="preserve">
    <value>La geometría no es válida, sistema de referencia no es Wgs84</value>
  </data>
  <data name="ProvinciaObligatorio" xml:space="preserve">
    <value>Provincia es obligatoria</value>
  </data>
  <data name="ProvinciaInvalido" xml:space="preserve">
    <value>Provincia es inválido</value>
  </data>
  <data name="MunicipioObligatorio" xml:space="preserve">
    <value>Municipio es obligatorio</value>
  </data>
  <data name="MunicipioInvalido" xml:space="preserve">
    <value>Municipio es inválido</value>
  </data>
  <data name="PaisObligatorio" xml:space="preserve">
    <value>Pais es obligatorio</value>
  </data>
  <data name="PaisInvalido" xml:space="preserve">
    <value>Pais es inválido</value>
  </data>
  <data name="UbicacionObligatorio" xml:space="preserve">
    <value>Ubicación es obligatorio</value>
  </data>
  <data name="UbicacionNoVacio" xml:space="preserve">
    <value>Ubicación no puede ser vacio</value>
  </data>
  <data name="IdObligatorio" xml:space="preserve">
    <value>Id es obligatorio</value>
  </data>
  <data name="IdNoVacio" xml:space="preserve">
    <value>Id no puede ser vacio</value>
  </data>
  <data name="EvolucionObligatorio" xml:space="preserve">
    <value>Evolucion es obligatorio</value>
  </data>
  <data name="FechaHoraObligatorio" xml:space="preserve">
    <value>Fecha hora es obligatoria</value>
  </data>
  <data name="EntidadMenorObligatorio" xml:space="preserve">
    <value>Entidad Menor es obligatorio</value>
  </data>
  <data name="IncendioObligatorio" xml:space="preserve">
    <value>Incendio es obligatorio</value>
  </data>
  <data name="IncendioInvalido" xml:space="preserve">
    <value>Incendio es inválido</value>
  </data>
  <data name="TipoDireccionEmergenciaObligatorio" xml:space="preserve">
    <value>Tipo dirección emergencia es obligatorio</value>
  </data>
  <data name="TipoDireccionEmergenciaInvalido" xml:space="preserve">
    <value>Tipo dirección emergencia es invalido</value>
  </data>
  <data name="MunicipioCECOPIInvalido" xml:space="preserve">
    <value>Municipio CECOPI es invalido</value>
  </data>
  <data name="MunicipioCECOPIObligatorio" xml:space="preserve">
    <value>Municipio CECOPI es Obligatorio</value>
  </data>
  <data name="MunicipioPMAiInvalido" xml:space="preserve">
    <value>Municipio CECOPI es invalido</value>
  </data>
  <data name="MunicipioPMAObligatorio" xml:space="preserve">
    <value>Municipio PMA es Obligatorio</value>
  </data>
  <data name="ProvinciaPMAInvalido" xml:space="preserve">
    <value>Provincia PMA es invalido</value>
  </data>
  <data name="ProvinciaPMAObligatorio" xml:space="preserve">
    <value>Provincia PMA es obligatorio</value>
  </data>
  <data name="ProvinciaCECOPIInvalido" xml:space="preserve">
    <value>Provincia CECOPI es invalido</value>
  </data>
  <data name="ProvinciaCECOPIObligatorio" xml:space="preserve">
    <value>Provincia CECOPI es obligatorio</value>
  </data>
  <data name="GeoPosicionPMAInvalida" xml:space="preserve">
    <value>La geometría PMA no es válida, sistema de referencia no es Wgs84</value>
  </data>
  <data name="GeoPosicionPMAObligatoria" xml:space="preserve">
    <value>GeoPosicion PMA es obligatorio</value>
  </data>
  <data name="GeoPosicionCECOPInvalida" xml:space="preserve">
    <value>La geometría CECOPI no es válida, sistema de referencia no es Wgs84</value>
  </data>
  <data name="GeoPosicionCECOPIObligatoria" xml:space="preserve">
    <value>GeoPosicion CECOPI es obligatoria</value>
  </data>
  <data name="AutoridadQueDirigeObligatorio" xml:space="preserve">
    <value>Autoridad Que Dirige es obligatorio</value>
    <comment>Autoridad Que Dirige es obligatorio</comment>
  </data>
  <data name="AutoridadQueDirigeEnBlanco" xml:space="preserve">
    <value>Autoridad que dirige no puede estar en blanco</value>
  </data>
  <data name="FechaInicioPMAObligatorio" xml:space="preserve">
    <value>Fecha inicio PMA es obligatoria</value>
  </data>
  <data name="IncendioIdNoVacio" xml:space="preserve">
    <value>Id Incendio no puede estar vacio</value>
  </data>
  <data name="IncendioIdObligatorio" xml:space="preserve">
    <value>Id Incendio es obligatorio</value>
  </data>
  <data name="MedioIdNoVacio" xml:space="preserve">
    <value>MedioId no puede ser vacio</value>
  </data>
  <data name="MedioIdObligatorio" xml:space="preserve">
    <value>MedioId es obligatorio</value>
  </data>
  <data name="FechaHoraNoVacio" xml:space="preserve">
    <value>FechaHora no puede ser vacio</value>
  </data>
  <data name="AsuntoNoVacio" xml:space="preserve">
    <value>Asunto no puede ser vacio</value>
  </data>
  <data name="AsuntoNoNulo" xml:space="preserve">
    <value>Asunto es obligatorio</value>
  </data>
  <data name="AsuntoMaxLegth" xml:space="preserve">
    <value>Asunto no puede superar 500 caracteres</value>
  </data>
  <data name="IdSucesoAsociadoNoVacio" xml:space="preserve">
    <value>Id Suceso asociado no puede ser vacio</value>
  </data>
  <data name="IdSucesoAsociadoObligatorio" xml:space="preserve">
    <value>Id suceso asociado es oblogatorio</value>
  </data>
  <data name="IdSucesoPrincipalNoVacio" xml:space="preserve">
    <value>Id Suceso principal no puede ser vacio</value>
  </data>
  <data name="IdSucesoPrincipalObligatorio" xml:space="preserve">
    <value>Id Suceso principal es obligatorio</value>
  </data>
</root>